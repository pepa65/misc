#!/usr/bin/env python3

import os
import argparse
import tempfile
import PyPDF2
from reportlab.pdfgen import canvas
from PIL import Image

parser = argparse.ArgumentParser(description="Add signature image to PDF file", epilog="Find the right 'coords' by trial-and-error or use a GUI: github.com/pepa65/pdfsig")
parser.add_argument("pdf", help="The pdf file to annotate")
parser.add_argument("sig", help="The signature image file (png/jpg)")
parser.add_argument("coords", help="Coordinates for signature positioning. Format: PAGE-X-Y-WIDTH. 1-200-300-125 means page 1, 200 units horizontally from Bottom-left, 300 units vertically from Bottom-left, 125 units wide. Page count starts at 1. One unit is 1/72 inch.")
parser.add_argument("-o", "--output", help="Output file (default: input filename plus '_signed')")

def _get_tmp_filename(suffix=".pdf"):
    with tempfile.NamedTemporaryFile(suffix=".pdf") as fh:
        return fh.name

def sign_pdf(args):
    #TODO: use a GUI (for now, just trial-and-error the coords)
    page_num, x1, y1, width = [int(a) for a in args.coords.split("-")]
    page_num -= 1
    output_filename = args.output or "{}_signed{}".format(
        *os.path.splitext(args.pdf)
    )
    pdf_fh = open(args.pdf, 'rb')
    sig_tmp_fh = None
    pdf = PyPDF2.PdfFileReader(pdf_fh)
    writer = PyPDF2.PdfFileWriter()
    sig_tmp_filename = None
    for i in range(0, pdf.getNumPages()):
        page = pdf.getPage(i)
        if i == page_num:
            # Create PDF for signature
            sig_tmp_filename = _get_tmp_filename()
            iw, ih = Image.open(args.sig).size
            height = ih*width/iw
            c = canvas.Canvas(sig_tmp_filename, pagesize=page.cropBox)
            c.drawImage(args.sig, x1, y1, width, height, mask='auto')
            c.showPage()
            c.save()
            # Merge PDF in to original page
            sig_tmp_fh = open(sig_tmp_filename, 'rb')
            sig_tmp_pdf = PyPDF2.PdfFileReader(sig_tmp_fh)
            sig_page = sig_tmp_pdf.getPage(0)
            sig_page.mediaBox = page.mediaBox
            page.mergePage(sig_page)
        writer.addPage(page)
    with open(output_filename, 'wb') as fh:
        writer.write(fh)
    for handle in [pdf_fh, sig_tmp_fh]:
        if handle:
            handle.close()
    if sig_tmp_filename:
        os.remove(sig_tmp_filename)

def main():
    sign_pdf(parser.parse_args())

if __name__ == "__main__":
    main()
