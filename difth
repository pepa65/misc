#!/bin/bash
set +vx
# difth - show the difference between 2 Thai language files in html or terminal
## Required: swath dwdiff sed coreutils(cat type mktemp rm)

## Color scheme
font="black" paper="white" back="#bbb" header="#888" hfont="black"
oldf="black" oldp="#fcc" oldb=$oldp newf="black" newp="#cfc" newb=$newp
#oldf="red" oldp=$paper oldb="pink" newf="darkgreen" newp=$paper newb="lightgreen"

Abort(){ # $1: abort message
	cat <<-EOF
		 $self - Show the differences between 2 Thai language input files
		  and either produce a html file, or output result to the terminal
		 USAGE: $self [-n|--nojs] [-c|--canonicalize] <file1> <file2> [<html-out>|-]
		   file1 and file2 are mandatory, html-out is optional, if - is given, then
		    html will be output to stdout (otherwise the colored diff to terminal)
		   When -n or --nojs is given, no javascript is used for html, otherwise
		    while viewing the html: click to cycle through the display modes.
	EOF
	echo -e "\nABORT: $1"
	exit 1
}

! type -p swath &>/dev/null && Abort "Package 'swath' not installed"
! type -p dwdiff &>/dev/null && Abort "Package 'dwdiff' not installed"
nojs=0 if1= if2= of= self=$(basename $0)
while (($#))
do
	[[ $1 = -n || $1 = --nojs ]] && nojs=1 && shift && continue
	[[ $if1 && $if2 && $of ]] && Abort "More than 3 file arguments"
	if [[ $if1 && $if2 ]]
	then
		[[ $1 = - ]] && of=/dev/stdout || of=$1
	elif [[ -f $1 ]]
	then
		[[ $if1 ]] && if2=$1 || if1=$1
	else
		Abort "Not a file: $1"
	fi
	shift
done
[[ -z $if1 || -z $if2 ]] && Abort "At least 2 filenames are necessary"
((nojs)) && [[ -z $of ]] && echo -e "INFO: option -n / --nojs ignored\n"
tmp=$(mktemp -d) t1="$tmp/t1" t2="$tmp/t2" stat="$tmp/stat"
n1=$(basename "$if1") n2=$(basename "$if2")
[[ $n1 = $n2 ]] && n1=$if1 n2=$if2

## unique separators: $d:delimiter $o:old-begin $e:end $n:new-begin
d="{d$RANDOM}" o="{o$RANDOM}" e="{e$RANDOM}" n="{n$RANDOM}"
grep -e $d -e $o -e $e -e $n "$if1" || grep -e $d -e $o -e $e -e $n "$if2" &&
	echo "ABORT: separator $d, $o, $e or $n present in input files" && exit 4

s1=$(swath -b "$d" -u u,u <"$if1")
s2=$(swath -b "$d" -u u,u <"$if2")

if [[ $of ]]
then  ## html
	sed -e 's@  @\&nbsp; @g' -e 's@\t@<span class="t"></span> @g' <<<"$s1" >"$t1"
	sed -e 's@  @\&nbsp; @g' -e 's@\t@<span class="t"></span> @g' <<<"$s2" >"$t2"
	out=$(dwdiff -s -R -A best -d $d -w $o -x $e -y $n -z $e -I "$t1" "$t2" 2>"$stat" |\
		sed -e "s@$d@@g" -e 's@^@<br>@g' -e "s@$e@</span>@g"\
				-e "s@$n@<span class=\"n\">@g" -e "s@$o@<span class=\"o\">@g")
	sed -i -e 's@old@เก่า@g'  -e 's@new@ใหม่@g' -e 's@words@คำ@g'\
		-e 's@common@ตรงกัน@g' -e 's@deleted@ลบ   @g' -e 's@inserted@แทรก@g'\
		-e 's@changed@เปลี่ยน@g' "$stat"
	cat <<-EOF >"$of"
		<!DOCTYPE html>
		<html lang="th">
		<meta charset="utf-8">
		<title>$n1 / $n2</title>
	EOF
	((nojs)) || cat <<-EOF >>"$of"
		<script>
		view=0;
		window.onclick = function(){
		 view=(++view%3);
		 var s, i;
		 if(view==0){ // both
		  document.body.style.background="$back";
		  s=document.getElementsByClassName("o");
		  for(i=0; i<s.length; i++) s[i].style.display="inline";} // was hidden
		 else if(view==1){ // old
		  document.body.style.background="$oldb";
		  s=document.getElementsByClassName("n");
		  for(i=0; i<s.length; i++) s[i].style.display="none";
		  s=document.getElementsByClassName("o");
		  for(i=0; i<s.length; i++) s[i].style.background="oldp";}
		 else { // new
		  document.body.style.background="$newb";
		  s=document.getElementsByClassName("o");
		  for(i=0; i<s.length; i++) s[i].style.display="none";
		  s=document.getElementsByClassName("n");
		  for(i=0; i<s.length; i++) s[i].style.display="inline";}}
		</script>
	EOF
	cat <<-EOF >>"$of"
		<style>
		body {background:$back; color:$font; font-size:150%; font-family:Arundina Serif,serif}
		div.h {color:$hfont; background:$header; padding:.2; margin:0 0 .2 0}
		pre {background:$back; margin:0 .5em; padding:0}
		h1 {text-align:center; font-size:80%}
		h1 span.o {padding:0 .2em}
		h1 span.n {padding:0 .2em}
		p.i {background:$header; font-size:70%; margin:0 .7em}
		div {background:$paper; padding:.5em}
		div.no span.o {display:none !important}
		div.nn span.n {display:none !important}
		span.t {display:inline-block; width:3em}
		span.o {color:$oldf; background:$oldp; text-decoration:line-through}
		span.n {color:$newf; background:$newp; text-decoration:underline}
		</style>
		<body><div class="h">
		<h1><span class="o">$n1</span> <span class="n">$n2</span></h1>
		<pre>
		$(cat "$stat")
		</pre>
	EOF
	((nojs)) || echo "<p class="i">คลิกเพื่อเปลี่ยนโหมดแสดง - Click to change the view mode" >>"$of"
	echo -e "</div><div>\n$out\n</div>" >>"$of"
	((nojs)) && cat <<-EOF >>"$of"
		<hr><div class="h nn">
		<h1><span class="o">$n1</span> <span class="n">$n2</span></h1>
		<pre>
		$(head -1 "$stat")
		</pre></div>
		<div class="nn">
		$out
		</div>
		<hr><div class="h no">
		<h1><span class="o">$n1</span> <span class="n">$n2</span></h1>
		<pre>
		$(tail -1 "$stat")
		</pre></div>
		<div class="no">
		$out
		</div>
	EOF
else  ## terminal
	echo "$s1" >"$t1"
	echo "$s2" >"$t2"
	out=$(dwdiff -s -R -A best -d $d -w $o -x $e -y $n -z $e -I "$t1" "$t2" 2>"$stat" |\
		sed -e "s@$d@@g" -e "s@$n@$(echo $'\o33\[7;4;32m')@g"\
				-e "s@$o@$(echo $'\o33\[7;4;31m')@g" -e "s@$e@$(echo $'\o33\[0m')@g")
	echo -e "$out"
	echo '--------------------------------------------------------------------------------'
	cat "$stat" |sed -e 's@old@เก่า@g'  -e 's@new@ใหม่@g' -e 's@words@คำ@g'\
			-e 's@common@ตรงกัน@g' -e 's@deleted@ลบ  @g' -e 's@inserted@แทรก@g'\
			-e 's@changed@เปลี่ยน@g'
fi

rm -r -- "$tmp"

exit 0
