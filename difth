#!/bin/bash
set +vx
# difth - show the difference between 2 Thai language files in html or terminal
## Required: swath dwdiff

Help(){
	cat <<-EOF
		 $(basename $0) - Show the differences between 2 Thai language input files
		  and either produce a html file, or output result to the terminal
		 USAGE:  $0 <file1> <file2> [<html-out>]
		   file1 and file2 are mandatory, html-out is optional (otherwise to stdout)
		   While viewing the html: click to cycle through the display modes.
	EOF
}

! type -p swath &>/dev/null && echo "ABORT: package swath not installed" && exit 1
! type -p dwdiff &>/dev/null && echo "ABORT: package dwdiff not installed" && exit 2
[[ -z $2 ]] && Help && echo "ABORT: At least 2 filenames necessary" && exit 3
[[ $4 ]] && Help && echo "ABORT: More than 3 arguments" && exit 4
! ai=$(readlink -e "$1") && Help && echo "ABORT: First argument no file: $1" && exit 5
! bi=$(readlink -e "$2") && Help && echo "ABORT: Second argument no file: $2" && exit 6
at=$(tempfile)
bt=$(tempfile)
st=$(tempfile)
#mapfile -t ia <"$1"
#mapfile -t ib <"$2"
	
## separators that don't occur in the input files already..?
s="{s$RANDOM}"
w="{w$RANDOM}"
x="{x$RANDOM}"
y="{y$RANDOM}"
z=$x
grep -e "$s" -e "$w" -e "$x" -e "$y" "$1" || grep -e "$s" -e "$w" -e "$x" -e "$y" "$2" &&
	echo "ABORT: separator present in input files: $s $w $x $y" && exit 7

swath -b "$s" -u u,u <"$ai" >"$at"
swath -b "$s" -u u,u <"$bi" >"$bt"

if [[ $3 ]]
then
ci=$(dwdiff -s -A best -d "$s" -w "$w" -x "$x" -y "$y" -z "$z" "$at" "$bt" 2>"$st" |
		sed -e "s@$s@@g" -e 's@^@<br />@g' -e "s@$y@<span class=\"v\">@g"\
				-e "s@$w@<span class=\"x\">@g" -e "s@$x@</span>@g")

cat <<EOF >"$3"
<html lang="th">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>$1 / $2</title>
<script type="application/javascript">
//<![CDATA[<!--
oldnewboth=3;
window.onclick = function (){
	var xs, vs, i;
	if(oldnewboth==1){ // do new
		oldnewboth=2; // hide old, show new, lightblue edge
		document.body.style.background="lightblue";
		xs=document.getElementsByClassName("x");
		for(i=0; i<xs.length; i++) xs[i].style.display="none";
		vs=document.getElementsByClassName("v");
		for(i=0; i<vs.length; i++){
			vs[i].style.display="inline";
			vs[i].style.background="white";}}
	else if(oldnewboth==2){ // do both
		oldnewboth=3; // show old too, white edge
		document.body.style.background="white";
		xs=document.getElementsByClassName("x");
		for(i=0; i<xs.length; i++){
			xs[i].style.display="inline";
			xs[i].style.background="pink";}
		vs=document.getElementsByClassName("v");
		for(i=0; i<vs.length; i++) vs[i].style.background="lightblue";}
	else { // do old
		oldnewboth=1; //hide new, keep showing old, pink edge
		document.body.style.background="pink";
		vs=document.getElementsByClassName("v");
		for(i=0; i<vs.length; i++) vs[i].style.display="none";
		xs=document.getElementsByClassName("x");
		for(i=0; i<xs.length; i++) xs[i].style.background="white";}}
//-->]]>
</script>
<style type="text/css">
body {font-size:200%; font-family:Arundina,serif}
span.x {background:pink; text-decoration:line-through}
span.v {background:lightblue; text-decoration:underline}
span.i {font-size:90%; font-weight:normal}
div.b {background:darkgray; color:black}
h1 {text-align:center; font-size: 80%}
pre {margin-left:1em; font-weight:bold}
div {background:white; padding:0.2em}
</style>
</head>
<body>
<div class="b"><h1><span class="x">$ai</span> <span class="v">$bi</span></h1>
<pre>$(cat "$st")
<span class="i">Click to cycle through the display modes: differences (pink+blue) / original (pink) / corrected (blue).</span></pre></div>
<div>
$ci
</div>
</body>
</html>
EOF

else
	ci=$(dwdiff -s -A best -d "$s" -w "$w" -x "$x" -y "$y" -z "$z" "$at" "$bt" 2>"$st" |sed -e "s@$s@@g" \
			-e "s@$y@$(echo $'\o33\[7;4;31m')@g" -e "s@$w@$(echo $'\o33\[7;4;34m')@g" -e "s@$x@$(echo $'\o33\[0m')@g")
	echo -e "$ci"
	echo '---------------------------------------------------------------------------------------------------'
	cat "$st"
fi

rm -- "$at" "$bt" "$st"

exit 0
