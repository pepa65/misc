#!/bin/bash
set +vx
# a5toa4 - Print an A5 size document on A4 for booklet folding
# Required: coreutils(cat mktemp) ghostscript(psselect pdf2ps ps2pdf) psutils(psnup)

Usage(){ # $1: code for exit
	cat <<-EOS
		a5toa4 - Print an A5 size document on A4 for booklet folding
		USAGE: a5toa4 [-h|--half] <a5.pdf> [<a4.pdf>]
		  Print the resulting A4 document on a single-sided printer by:
		  - printing the even pages
		  - flipping the whole bundle of sheets over
		  - printing the odd pages
		  Or print it on a full-duplex printer.
		  If -h or --half is given, the printing can be done by:
		  - printing pages 1..n/2
		  - flipping the whole bundle of sheets over
		  - printing pages n/2+1..n
	EOS
	[[ $1 ]] && exit $1
}		

# process commandline
(($#)) || Usage 1
in=
half=0
[[ $1 = -h || $1 = --half ]] && half=1 && shift
[[ $1 ]] && in=$1 && shift
[[ $1 = -h || $1 = --half ]] && half=1 && shift
[[ ! -f $in ]] && echo "ABORT: filename of A5 sized pdf required, no file: '$in'" &&
	Usage 2
out=$(basename "$in")
[[ ${in: -6:6} = "A5.pdf" ]] && out="${out%A5.pdf}A4.pdf" || out="${out%.pdf}A4.pdf"
[[ $1 ]] && out=$1 && shift
[[ $1 = -h || $1 = --half ]] && half=1 && shift
[[ $1 ]] && echo "ABORT: unrecognized option: '$1'" &&
	Usage 3

echo "Convert to A5 pdf to ps..."
tmp=$(mktemp -d)
pdf2ps "$in" "$tmp/a5.ps" 2>/dev/null

echo "Convert A5 ps to A4..."
cd "$tmp"
# Get number of pages
p=$(psselect -p- a5.ps 2>&1 >/dev/null) p=${p#*Wrote } p=${p%% *}
((!p)) && echo "ABORT: no pages found" && rm -r "$tmp" && exit 3

# p: # of A5-pages; n: full [multiple of 4] # of A5-pages; s: # of A4-sheets
((n=p,r=p%4)) && ((r=4-r,n+=r))
((s=n/4,m=n/2))

# Make normal duplex range: n,1 2,n-1 (-2,+2 +2,-2)
range=()
((a=n,b=1,c=2,d=n-1))
while ((b<m))
do
	((a>p)) && range+=(_) || range+=($a)
	((b>p)) && range+=(_) || range+=($b)
	((c>p)) && range+=(_) || range+=($c)
	((d>p)) && range+=(_) || range+=($d)
	((a-=2,b+=2,c+=2,d-=2))
done
r=${range[@]} r=${r// /,}

if ((half && s>1))
then # Half requested and more than 1 sheet
	# Make half-flip range: reverse odd pairs + reverse even pairs:
	#  [p>4 i=n..-4..0] i-3,i-2 ... i-1,i ...
	i=n odd= even=
	while ((i>3))
	do # lower all indexes by 1 for zero-based array
		odd+="${range[i-4]} ${range[i-3]} "
		even+="${range[i-2]} ${range[i-1]} "
		((i-=4))
	done
	r=$odd${even%?} r=${r// /,}
fi

# Put the A5 pages on A4
psselect -p $r a5.ps a5c.ps
PAPERSIZE=a4 psnup -2 -Pa5 -pa4 a5c.ps a4.ps
cd -

echo "Convert A4 ps to pdf..."
ps2pdf "$tmp/a4.ps" "$out"
rm -r -- "$tmp"

echo "All done! Now print the booklet '$out' by:"
if ((half))
then
	echo "- printing pages 1-$s"
	echo "- flipping the whole bundle of sheets over"
	echo "- printing pages $((s+1))-$((s+s))"
else
	echo "- printing the even pages"
	echo "- flipping the whole bundle of sheets over"
	echo "- printing the odd pages"
	echo "Or by printing the document with a full-duplex printer."
fi

exit 0
