#!/bin/bash
set +vx
# a5toa4 - Print an A5 size document on A4 for booklet folding
# USAGE: a5toa4 <a5.pdf> [<a4.pdf>]
#  Print the resulting A4 document on a single-sided printer by printing
#  pages 1..n/2, flipping the bundle of sheets over, then printing pages n/2+1..n
# Required: coreutils(cat mktemp) ghostscript(psselect pdf2ps ps2pdf14) psutils(psnup)

in=
[[ $1 ]] && in=$1
[[ ! -f $in ]] && echo "ABORT: filename of A5 sized pdf required" &&
  echo "USAGE: a5toa4 <a5.pdf> [<a4.pdf>]" && exit 1

tmp=$(mktemp -d)

echo "Convert to A5 pdf to ps..."
pdf2ps -dLanguageLevel=3 "$in" "$tmp/a5.ps" 2>/dev/null

cd "$tmp"
p=$(psselect -p- a5.ps 2>&1 >/dev/null) p=${p#*Wrote } p=${p%% *}
((!p)) && echo "ABORT: no pages found" && rm -r "$tmp" && exit 2
out=$(basename "$in")
[[ ${in: -6:6} = "A5.pdf" ]] && out="${out%A5.pdf}A4.pdf" || out="${out%.pdf}A4.pdf"
[[ $2 ]] && out=$2

# p: # A5-pages; n: full [multiple of 4] # A5-pages; s: # A4-sheets (=n/4)
((n=p,r=p%4)) && ((r=4-r,n+=r))
((s=n/4))
# range: n,1 n/2,n/2+1 (-2,+2) [pairs reversed for psnup...]
range=
((a=n,b=1,c=a/2,d=c+1))
while ((d<n))
do
	[[ $range ]] && range+=","
	range+="$b,"
	((a>p)) && range+="_," || range+="$a,"
	((d>p)) && range+="_," || range+="$d,"
	((c>p)) && range+="_" || range+="$c"
	((a-=2,b+=2,c-=2,d+=2))
done

echo "Convert A5 ps to A4..."
psselect -p $range a5.ps a5c.ps
PAPERSIZE=a4 psnup -2 -r -Pa5 -pa4 a5c.ps a4.ps
cd -

echo "Convert A4 ps to pdf..."
ps2pdf14 "$tmp/a4.ps" "$out"
rm -r -- "$tmp"

echo -e "\nAll done! Now print the booklet by:\n- printing pages 1-$s"
echo "- flipping the whole bundle of sheets over"
echo "- printing pages $((s+1))-$((s+s))"

exit 0
