#!/usr/bin/env bash
set +ex
# fillform - Auto fill pdf/ps 'form' in batch
# Usage: fillform [<dir> | <file.flp>]
#   Directory <dir> (or the PWD) must have the input files.
# Input: 'FORM.flpsed *.flp'  Output: 'FORM.pdf *.pdf'
# Required: flpsed sed ghostscript(ps2pdf) poppler-utils(pdfunite)
#           coreutils(cd wc rm ls)
#
# In the (current or given) directory there should be 1 file with the .flpsed
# extension that is made with "flpsed SOMEFORM.pdf" and 'tagging' each field
# with "Ctrl-E" at the desired place on the form, and eventually saved as
# 'FORM.flpsed'. The template for filling in the forms can be generated by:
# "flpsed -d FORM.flpsed >TEMPLATE". For every case the TEMPLATE should be
# copied to CASE.flp (different name CASE for each case!). Each case should be
# filled in with the appropriate values, enclosed in quotes if the value
# contains spaces. When run, all CASE.flp files are filled into the FORM.flpsed
# file and CASE.pdf files are generated and merged into one FORM.pdf file.

dir=$PWD files='*.flp'
if [[ $1 ]]
then
	if [[ -f $1 ]]
	then file=$1
	else
		[[ ! -d $1 ]] &&
			echo "Argument should be filename or directory: '$1'" &&
			exit 1 ||
			dir=$1
	fi
	shift
	[[ $@ ]] &&
		echo "Invalid extra arguments: $@" &&
		exit 2
fi

[[ $file ]] && _=$(readlink -e "$file") dir=${_%/*}
cd "$dir"
form=$(ls *.flpsed)
(($(wc -l <<<"$form") > 1)) &&
	echo "Only 1 .flpsed file should be present!" &&
	exit 3

[[ ! -f $form ]] &&
	echo "Need single input file '$form'" &&
	exit 4

unite= #lines=$(wc -l <<<$(flpsed -d "$form"))
[[ $file ]] &&
	files=$file ||
	files='*.flp'
for f in $files
do
	[[ ! -f $f ]] && # *.flp has no matches
		echo "Need input file(s) $f" &&
		exit 5

	[[ ! $f = ${f// } ]] &&
		echo "'$f' should not have spaces" &&
		exit 6

	#l=$(wc -l <"$f")
	#((lines!=l)) &&
	#	echo "Length of $f is $l, not $lines" &&
	#	exit 6

	fields=$(sed -e 's@^@ -t @' -e 's@$@ \\@' "$f"; echo)
	ps=${f%flp}ps
	cmd="flpsed -b \"$form\" \"$ps\" $(echo "$fields")"
#echo "$cmd"
	eval "$cmd"
	pdf=${f%flp}pdf
	ps2pdf "$ps" "$pdf" && rm -- "$ps"
	unite+="$pdf "
done

#exit # If no collating is desired

if [[ -z $file ]]
then # Not a single file specified
	#! pdfunite $unite ${form%.flpsed}$(date +%Y%m%d).pdf &&
	! pdfunite $unite ${form%flpsed}pdf &&
		echo "Something went wrong collating the pdf files" &&
		exit 7
fi

ls -AFltr *.pdf *.flp *.flpsed
exit
