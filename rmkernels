#!/bin/bash
set +xv
## rmkernels - remove extraneous kernels from /boot on Ubuntu based systems
## Usage: bash rmkernels [-f|--force] [<version>]...
##  - if the -f option is given, newer than currently running can be removed
##  - anything installed that matches <version> will be proposed for removal

main(){
	force=0 e=
	while [[ $1 ]]
	do
		[[ $1 = -f || $1 = --force ]] && force=1 || e+=" $1"  ## Extra removals
		shift
	done

	a=$(ls -1 /boot/vmlinuz-* |
			sed 's@^/boot/vmlinuz-@@' |
			grep -v '\.efi\.signed' |
			sort -nr)  ## All installed images according to name
	c=$(uname -r)  ## Currently running kernel version
	n=$(grep -v "$c" <<<"$a")  ## Non-running installed images
	echo -e "Found kernel images:\n$c (currently running)\n$n"
	## Superfluous versions: latest of same major.minor version of non-running kernels
	s=$(ao= bo=
		while IFS='.' read a b c
		do
			[[ $ao = $a && $bo = $b ]] && echo "$a.$b.${c%-*}"
			ao=$a bo=$b
		done <<<"$n"
	)

	[[ -z $s && -z $e ]] && echo "Nothing to remove" && return 0

	pkgs=$(dpkg -l | tail -n +6 |sed 's@^[^ ]*[ ]*\([^ ]*\).*@\1@')
	if [[ $s ]]
	then
		echo -e "\nRemoving:\n$s\Packages:"
		## Check if an older kernel is currently running
		newer=
		while read k
		do
			[[ $c < $k ]] && newer+="$k\n"
		done <<<"$s"
		if [[ $newer ]]
		then
			echo -e "\nFound installed kernels newer than currently running:\n$newer"
			((~force)) && echo "Run with '-f' or '--force' to force removal" && return 1
		fi
		ps=$(echo "$pkgs" |grep -e ${s// / -e })
	fi
	if [[ $e ]]
	then
		pe=$(echo "$pkgs" |grep ${e// / -e })
		echo -e "\nExtra removals from commandline:$e\nPackages:" $pe
	fi

	## Purge all that is found with these superfluous and extra versions
	echo -e "\nChecking with the package manager:"
	sudo apt purge $ps $pe
}

main $*
