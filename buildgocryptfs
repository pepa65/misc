#!/bin/bash

# buildgocryptfs - Build gocryptfs
# Usage: buildgocryptfs [-n|--new-go]
#   -n/--new-go:  force the installation of go even if one is present
#
# Required: go coreutils(ls) pkg-config
#   Or (to install go): wget sudo tar coreutils(mktemp mv rm)
# GO_ARCH can be set to a different go-relase-archive
# When TMPDIR is set, it is used for the temporary directory

gover=1.11.5
goloc=/usr/local # Install location for the go tree
bin=/usr/local/bin # Install location for gocryptfs binary

Abort(){ # $1:message
	echo "ABORT: $1"
	exit 1
}

newgo=0
[[ $1 = -n || $1 = --new-go ]] && newgo=1

# Try to install go if not found in PATH
if ((newgo)) || ! go=$(type -p go)
then
	arch=$(uname -m)
	[[ $GO_ARCH ]] && go_arch=$GO_ARCH ||
		case $arch in # Check for latest version: https://golang.org/dl/
			armv7l) go_arch=go$gover.linux-armv6l.tar.gz ;;
			x86_64) go_arch=go$gover.linux-amd64.tar.gz ;;
			*) Abort "manually select the right go release for $arch"
		esac
	tmp=$(mktemp -d --tmpdir=$TMPDIR)
	trap "rm -rf -- '$tmp'" QUIT EXIT
	wget -qO "$tmp/$go_arch" "https://dl.google.com/go/$go_arch" ||
		Abort "could not download go and it's not in PATH"
	tar xf "$tmp/$go_arch" -C "$tmp" || Abort "error unpacking $go_arch to $tmp"
	# Move install directory if it exists already
	[[ -d $goloc/go ]] && ! sudo mv "$goloc/go" "$goloc/$go_old$RANDOM" &&
		Abort "could not move $goloc/go out of the way"
	sudo mv "$tmp/go" "$goloc" || Abort "could not move $tmp/go to $goloc"
	export PATH="$goloc/go/bin:$PATH"
	echo "Set in .bashrc: export GOROOT='$goloc/go' GOPATH='~/go'"
	export GOROOT="$goloc/go" GOPATH=~/go
	go="$goloc/go/bin/go"
fi

# Install gocryptfs
repo=$("$go" env GOPATH)/src/github.com/rfjakob/gocryptfs
"$go" get -du github.com/rfjakob/gocryptfs
"$repo/build.bash"
# "$repo/test.bash"
sudo cp "$repo/gocryptfs "$bin" && echo "gocryptfs installed in $bin"

exit 0
