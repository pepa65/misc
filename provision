#!/usr/bin/env bash
set -e  # Exit on any error
# provision - Provision server
# Usage:  provision <remote>
#   <remote>:  Host from ~/.ssh/config (as root or sudoable)
#   Run on mainmachine to logon on Ubuntu minimal LTS server).
# Actions:
# * Configure TZ
# * Set up users pp and PeterPasschier1965
# * Set up sshd (PP) for pp@mainmachine
# * Update repo
# * Install basic software
# * Uninstall snap (Ubuntu)
# * Get github.com/pepa65/misc
# * Get config files set up

prov=$0 remoteorid=$1 mainid=$(</etc/machine-id)

Inf(){	# 1:msg
	echo "--- $1"
}
Err(){ # 1:msg 2:ret
	echo "### $1"
	exit $2
}

# Exit if no argument
[[ -z $remoteorid ]] &&
	Err "Need HOST (from ~/.ssh/config)" 1

# Priming remote
if [[ $remoteorid && ! ${remoteorid:0:1} = . ]]
then # On main, remote given (not an id)
	Inf "Setting up authorized_keys on $remote"
	ssh-copy-id -i ~/.ssh/id_ed25519.pub "$remote"
	Inf "Copying '$prov' from $myid to $remote..."
	scp "$prov" "$1":
	provname=${prov##*/}
	Inf "Executing '$provname' on $remote..."
	ssh "$1" "sudo bash $provname .$mainid"  # On remote, id given
	exit
fi

# Check if on remote
me=$(whoami) id=$(</etc/machine-id) fromid=${remoteorid:1} sudo=
[[ $fromid = $id ]] &&
	Err "Not on remote (same machine id), exiting" 2

Inf "User $me on $id (from $fromid): $(hostname -A)"

# On remote
set -xv
dpkg-reconfigure tzdata
apt update
apt-get purge -y snapd
apt-mark hold snapd
apt-get install -y nano dfc iftop iotop colordiff dwdiff caca-utils git tmux aptitude rsync csvtool jq psmisc lsof telnet
apt-get full-upgrade -y
apt-get autoremove -y
apt-get clean -y
id pp ||
	adduser pp
id PeterPasschier1965 ||
	adduser PeterPasschier1965 --allow-bad-names
pp=/home/pp
mkdir -p $pp/git
git clone https://gitlab.com/pepa65/misc $pp/git/misc || true
if [[ ! -f $pp/.tmux.conf ]]
then
	cp $pp/git/misc/.tmux.conf $pp
	echo -e "\n#PP\nsource $pp/git/misc/pp\n" |tee -a $pp/.bashrc
	echo -e "\n#PP\nsource $pp/git/misc/pp\n" |tee -a /root/.bashrc
fi

# Setup .nanorc
wget 4e4.in/nanorc
cp nanorc $pp/.nanorc
cp nanorc /home/PeterPasschier1965/.nanorc
chown PeterPasschier1965:PeterPasschier1965 /home/PeterPasschier1965/.nanorc
mv nanorc /root/.nanorc
chown pp:pp $pp -R

# Install c & l
wget 4e4.in/c
wget 4e4.in/l
chmod +x c l
mv c l /usr/local/bin/
chown root:root /usr/local/bin/*

# Setup tmux
echo -e "\n#PP\nalias s='su -l pp -c \"tmux new-session -A -t pp\"'\n" |tee -a /home/PeterPasschier1965/.bashrc

# Setup sshd
for a in X11Forwarding PrintMotd AllowUsers Port
do sed -i "s/^$a/#$a/" /etc/ssh/sshd_config
done
echo -e "\nPort 5691\nAllowUsers PeterPasschier1965\nX11Forwarding no\nPrintMotd no\n" |tee -a /etc/ssh/sshd_config
systemctl daemon-reload
systemctl restart ssh
