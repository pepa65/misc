#!/bin/bash
set +vx
# pdfslice - Make a pdf from a page range in a source document
# Required: poppler-utils(pdfseparate pdfunite pdfinfo) coreutils(mktemp rm)

Help(){ # $1:message $2:(optional)code [0:Warning, 1:Fatal]
	if [[ $2 ]]
	then
		(($2)) && echo "FATAL: $1" && exit 2 || echo "WARNING: $1"
	else
		cat <<-EOM
			$Self - Make a pdf from a page range in a source document

			Usage:  $Self [-h|--help ] | <range> <in.pdf> [<out.pdf>]
			  Where <range> is:  [<from>],[<to>] | [<from>]+[<number>]
			    If <from> & <to> start with a minus sign they count from the back;
			      if omitted they default to first & last page;
			      <number> specifies the number of pages, if omitted defaults to 1.
			  -h/--help:  Just display this help text.
		EOM
		[[ $1 ]] && echo -e "\n$1" && exit 1 || exit 0
	fi
}

Self=${0##*/}
(($#)) || Help "Commandline arguments needed"
[[ $1 = -h || $1 = --help ]] && Help
range=$1 in=$2 out=$3
[[ $range == *+* || $range == *,* ]] ||
	Help "<range> needs either 1 comma or 1 plus sign, not: '$range'"
[[ $in ]] || Help "Input document <in.pdf> not specified"
[[ -f "$in" ]] || Help "Input document <in.pdf> is not a file: '$in'"
total=$(pdfinfo "$in" 2>/dev/null |grep '^Pages:') total=${total##* }
[[ $total ]] || Help "Could not determine the number of pages in $in"
if [[ $range == *+* ]]
then
	f=${range%+*} number=${range#*+}
	[[ $f ]] || f=1
	[[ $number ]] || number=1
	[[ $number =~ ^[1-9][0-9]*$ ]] ||
		Help "<number> should be a positive integer, not '$number'"
	[[ ${f#-} =~ ^[1-9][0-9]*$ ]] ||
		Help "<from> should be a non-zero integer, not '$f'"
	((f<0)) && from=$((total+f+1)) || from=$f
	((from<1)) && from=1
		Help "The actual first page is before 1, starting at 1" 0
	((from>total)) && from=total
		Help "The actual first page is higher than total, starting at $total" 0
	to=$((from+number-1))
	((to>total)) && to=$total &&
		Help "<number> '$number' too high, just producing $((to-from+1))" 0
else  # range with comma
	f=${range%,*} t=${range#*,}
	[[ $f ]] || f=1
	[[ ${f#-} =~ ^[1-9][0-9]*$ ]] ||
		Help "<from> should be a non-zero integer, not '$f'"
	((f<0)) && from=$((total+f+1)) || from=$f
	((from<1)) && from=1 &&
		Help "The actual first page is below 1, starting at 1" 0
	[[ $t ]] || t=$total
	[[ ${t#-} =~ ^[1-9][0-9]*$ ]] ||
		Help "<to> should be a non-zero integer, not '$t'"
	((t<0)) && to=$((total+t+1)) || to=$t
	((to<from)) &&
		Help "The actual last page is before the actual first page: $to<$from"
	((to>total)) && to=$total &&
		Help "The actual last page is higher than total, going until $total" 0
fi
[[ $out ]] || out="$(basename "$in" .pdf)_$from-$to.pdf"

tmp=$(mktemp -d)
pdfseparate -f "$from" -l "$to" "$in" "$tmp/p%07d"
[[ -z $(ls -L) ]] && Help "Problem getting pages $from-$to from $in" 1
pdfunite "$tmp"/p* "$out"
rm -r -- "$tmp"

exit 0
